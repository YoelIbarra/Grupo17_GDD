USE GD1C2020;

GO
--BORRAR

--FUNCIONES
if object_id('DATASCIENTISTS.ObtenerIdTipoPasaje') is not null
	DROP FUNCTION DATASCIENTISTS.ObtenerIdTipoPasaje;
GO
if object_id('DATASCIENTISTS.ObtenerIdRuta') is not null
	DROP FUNCTION DATASCIENTISTS.ObtenerIdRuta;
GO
if object_id('DATASCIENTISTS.ObtenerIdDimAvion') is not null
	DROP FUNCTION DATASCIENTISTS.ObtenerIdDimAvion;
GO

--STORED PROCEDURES
if object_id('DATASCIENTISTS.MigracionMesAnio') is not null
	DROP PROCEDURE DATASCIENTISTS.MigracionMesAnio;
GO
if object_id('DATASCIENTISTS.MigracionProveedores') is not null
	DROP PROCEDURE DATASCIENTISTS.MigracionProveedores;
GO
if object_id('DATASCIENTISTS.MigracionTiposPasaje') is not null
	DROP PROCEDURE DATASCIENTISTS.MigracionTiposPasaje;
GO
if object_id('DATASCIENTISTS.MigracionRutas') is not null
	DROP PROCEDURE DATASCIENTISTS.MigracionRutas;
GO
if object_id('[DATASCIENTISTS].MigracionBITiposHabitaciones') is not null
	DROP PROCEDURE [DATASCIENTISTS].MigracionBITiposHabitaciones;
GO
if object_id('[DATASCIENTISTS].MigracionBIHotelesDestinos') is not null
	DROP PROCEDURE [DATASCIENTISTS].MigracionBIHotelesDestinos;
GO
if object_id('[DATASCIENTISTS].MigracionBIAviones') is not null
	DROP PROCEDURE [DATASCIENTISTS].MigracionBIAviones;
GO
if object_id('[DATASCIENTISTS].MigracionBICiudadesDestino') is not null
	DROP PROCEDURE [DATASCIENTISTS].MigracionBICiudadesDestino;
GO
if object_id('[DATASCIENTISTS].MigracionEdadesCliente') is not null
	DROP PROCEDURE [DATASCIENTISTS].MigracionEdadesCliente;
GO
if object_id('[DATASCIENTISTS].MigracionHechosPasajes') is not null
	DROP PROCEDURE [DATASCIENTISTS].MigracionHechosPasajes;
GO

--TABLAS
if object_id('DATASCIENTISTS.DIMENSION_MES_ANIO') is not null
	DROP TABLE [DATASCIENTISTS].DIMENSION_MES_ANIO;
GO
if object_id('DATASCIENTISTS.DIMENSION_PROVEEDORES') is not null
	DROP TABLE [DATASCIENTISTS].DIMENSION_PROVEEDORES;
GO
if object_id('DATASCIENTISTS.DIMENSION_TIPOS_PASAJE') is not null
	DROP TABLE [DATASCIENTISTS].DIMENSION_TIPOS_PASAJE;
GO
if object_id('DATASCIENTISTS.DIMENSION_RUTAS') is not null
	DROP TABLE [DATASCIENTISTS].DIMENSION_RUTAS;
GO
if object_id('DATASCIENTISTS.DIMENSION_TIPOS_HABITACIONES') is not null
	DROP TABLE [DATASCIENTISTS].DIMENSION_TIPOS_HABITACIONES;
GO
if object_id('DATASCIENTISTS.DIMENSION_HOTELES_DESTINOS') is not null
	DROP TABLE [DATASCIENTISTS].DIMENSION_HOTELES_DESTINOS;
GO
if object_id('DATASCIENTISTS.DIMENSION_CIUDADES_DESTINO') is not null
	DROP TABLE [DATASCIENTISTS].DIMENSION_CIUDADES_DESTINO;
GO
if object_id('DATASCIENTISTS.DIMENSION_AVIONES') is not null
	DROP TABLE [DATASCIENTISTS].DIMENSION_AVIONES;
GO
if object_id('DATASCIENTISTS.DIMENSION_EDADES_CLIENTE') is not null
	DROP TABLE [DATASCIENTISTS].DIMENSION_EDADES_CLIENTE;
GO
if object_id('DATASCIENTISTS.DIMENSION_SUCURSALES') is not null
	DROP TABLE [DATASCIENTISTS].DIMENSION_SUCURSALES;
GO
if object_id('DATASCIENTISTS.HECHOS_PASAJES') is not null
	DROP TABLE [DATASCIENTISTS].HECHOS_PASAJES;
GO
	
PRINT CAST(SYSDATETIME() AS VARCHAR(25))+' Modelo dimensional de datos anterior, borrado correctamente';
GO

CREATE TABLE [DATASCIENTISTS].[DIMENSION_PROVEEDORES]
(
	[PROV_ID] decimal(18,0) NOT NULL,
	[PROV_RAZON_SOCIAL] nvarchar(255),
	[PROV_CANT_PASAJES_VENDIDA] decimal(18,0),
	[PROV_CANT_ESTADIAS_VENDIDA] decimal(18,0),
	[PROV_MAYOR_TIPO_BUTACA] nvarchar(50),
	[PROV_CANT_ESTRELLAS_PROM] decimal(18,2),
	[PROV_MAYOR_DESTINO] nvarchar(255),
	[PROV_GANANCIA_TOTAL] decimal(18,2),
	CONSTRAINT PK_DIMENSION_PROVEEDORES PRIMARY KEY(PROV_ID)
);

CREATE TABLE [DATASCIENTISTS].[DIMENSION_MES_ANIO]
(
	[MA_MES_ANIO_ID] nvarchar(6) NOT NULL,
	[MA_GANANCIA] decimal(18,2),
	[MA_FACTURACION] decimal(18,2),
	[MA_MAYOR_DESTINO] nvarchar(255),
	[MA_MAYOR_RUTA] nvarchar(300),
	[MA_MAYOR_CLIENTE] nvarchar(100),
	[MA_MAYOR_SUCURSAL] nvarchar(255),
	[MA_MAYOR_PROVEEDOR] nvarchar(255),
	CONSTRAINT PK_DIMENSION_MES_ANIO PRIMARY KEY(MA_MES_ANIO_ID)
);

CREATE TABLE [DATASCIENTISTS].[DIMENSION_TIPOS_PASAJE]
(
	[TIP_PAS_ID] decimal(18,0) IDENTITY(1,1) NOT NULL,
	[TIP_PAS_TIPO_BUTACA] nvarchar(50),
	[TIP_PAS_CANT_PASAJES] decimal(18,0),
	[TIP_PAS_EDAD_PROM] decimal(18,2),
	[TIP_PAS_MAYOR_DESTINO] nvarchar(255),
	[TIP_PAS_MAYOR_PROVEEDOR] nvarchar(255),
	[TIP_PAS_GANANCIA_TOTAL] decimal(18,2),
	CONSTRAINT PK_DIMENSION_TIPOS_PASAJE PRIMARY KEY(TIP_PAS_ID),
	CONSTRAINT UC_DIMENSION_TIPOS_PASAJE UNIQUE (TIP_PAS_ID, TIP_PAS_TIPO_BUTACA)
);

CREATE TABLE [DATASCIENTISTS].[DIMENSION_RUTAS]
(
	[RUT_ID] decimal(18,0) IDENTITY(1,1) NOT NULL,
	[RUT_DESCRIPCION] nvarchar(300),
	[RUT_CANT_VIAJES] decimal(18,0),
	[RUT_MAYOR_TIPO_BUTACA] nvarchar(50),
	[RUT_MAYOR_PROVEEDOR] nvarchar(255),
	[RUT_COSTO_PROMEDIO] decimal(18,2),
	[RUT_PRECIO_PROMEDIO] decimal(18,2),
	CONSTRAINT PK_DIMENSION_RUTAS PRIMARY KEY(RUT_ID),
	CONSTRAINT UC_DIMENSION_RUTAS UNIQUE (RUT_ID, RUT_DESCRIPCION)
);

CREATE TABLE [DATASCIENTISTS].[DIMENSION_TIPOS_HABITACIONES]
(
[TIP_HAB_ID] decimal(18,0),
[TIP_HAB_DESCRIPCION] nvarchar(50),
[TIP_HAB_CANT_CAMAS] decimal(18,0),
[TIP_HAB_ESTRELLAS_PROM] decimal(18,2),
[TIP_HAB_EDAD_PROM]	decimal(18,2),
[TIP_HAB_CANT_ESTADIAS] decimal(18,0),
[TIP_HAB_MAYOR_PROVEEDOR] nvarchar(255),
[TIP_HAB_GANANCIA_TOTAL] decimal(18,2),
CONSTRAINT PK_DIMENSION_TIPOS_HABITACIONES PRIMARY KEY(TIP_HAB_ID)
);

CREATE TABLE [DATASCIENTISTS].[DIMENSION_HOTELES_DESTINOS]
(
[HOTEL_ID] decimal(18,0),
[HOT_DIRECCION] nvarchar(255),
[HOT_TOTAL_CAMAS] decimal(18,0),
[HOT_CANT_VIAJES] decimal(18,0),
[HOT_EDAD_PROM] decimal(18,2),
[HOT_GANANCIA_TOTAL] decimal(18,2),
[HOT_DIAS_PROM] decimal(18,2),
[HOT_CANT_ESTRELLAS] decimal(18,0),
CONSTRAINT PK_DIMENSION_HOTELES_DESTINOS PRIMARY KEY(HOTEL_ID)
);

CREATE TABLE [DATASCIENTISTS].[DIMENSION_CIUDADES_DESTINO]
(
	[CIU_DES_ID] decimal(18,0) NOT NULL,
	[CIU_DES_CIUDAD] nvarchar(255),
	[CIU_DES_CANT_VIAJES] decimal(18,0),
	[CIU_DES_EDAD_PROM] decimal(18,2),
	[CIU_DES_GANANCIA_TOTAL] decimal(18,2), 
	[CIU_DES_MAYOR_ORIGEN] nvarchar(255),
	CONSTRAINT PK_DIMENSION_CIUDADES_DESTINO PRIMARY KEY(CIU_DES_ID)
);

CREATE TABLE [DATASCIENTISTS].[DIMENSION_AVIONES]
(
	[AVI_ID] decimal(18,0) IDENTITY(1,1) NOT NULL,
	[AVI_PATENTE] nvarchar(50),
	[AVI_MODELO] nvarchar(50),
	[AVI_MAYOR_TIPO_BUTACA] nvarchar(50),
	[AVI_MAYOR_RUTA] nvarchar(300),
	[AVI_CANT_VUELOS] decimal(18,0),
	CONSTRAINT PK_DIMENSION_AVIONES PRIMARY KEY(AVI_ID),
	CONSTRAINT UC_DIMENSION_AVIONES UNIQUE (AVI_ID, AVI_PATENTE, AVI_MODELO)
);

CREATE TABLE [DATASCIENTISTS].[DIMENSION_EDADES_CLIENTE]
(
	[ED_CLI_EDAD_ID] decimal(18,0) NOT NULL,
	[ED_CLI_CANT_PASAJES] decimal(18,0),
	[ED_CLI_CANT_ESTADIAS] decimal(18,0),
	[ED_CLI_GASTO_TOTAL] decimal(18,2),
	CONSTRAINT PK_DIMENSION_EDADES_CLIENTE PRIMARY KEY(ED_CLI_EDAD_ID)
);

CREATE TABLE [DATASCIENTISTS].[DIMENSION_SUCURSALES]
(
	[SUC_ID] decimal(18,0),
	[SUC_DIRECCION] nvarchar(255),
	[SUC_MAIL] nvarchar(255),
	[SUC_TELEFONO] int,
	[SUC_MAYOR_DESTINO] decimal(18,0),
	[SUC_FACTURACION_TOTAL] decimal(18,2),
	[SUC_CANT_VIAJES] decimal(18,0),
	[SUC_CANT_PASAJES] decimal(18,0),
	[SUC_CANT_ESTADIAS] decimal(18,0),
	[SUC_MAYOR_CLIENTE] decimal(18,0),
	CONSTRAINT PK_DIMENSION_SUCURSALES PRIMARY KEY(SUC_ID)
);
/*
CREATE TABLE [DATASCIENTISTS].[HECHOS_ESTADIAS]
(
[ID_MES_ANIO] nvarchar(6),
[ID_EDAD_CLIENTE] decimal(18,0),
[ID_PROVEEDOR] decimal(18,0),
[ID_TIPO_HABITACION] decimal(18,0),
[ID_HOT_DESTINO] decimal(18,0),
[ID_SUCURSAL] decimal(18,0),
[GANANCIA] decimal(18,2),
[CANTIDAD_DE_CAMAS] decimal(18,0),
[CANTIDAD_HABITACIONES] decimal(18,0),
[CANTIDAD_DIAS_PROM] decimal(18,2),
[COSTO_PROMEDIO] decimal(18,2),
[PRECIO_PROMEDIA] decimal(18,2),
[FACTURACION] decimal(18,2),
CONSTRAINT FK_DIMENSION_MES_ANIO FOREIGN KEY(ID_MES_ANIO)
	REFERENCES [DATASCIENTISTS].DIMENSION_MES_ANIO(MA_MES_ANIO_ID),
CONSTRAINT FK_DIMENSION_EDAD_CLIENTE FOREIGN KEY(ID_EDAD_CLIENTE)
	REFERENCES [DATASCIENTISTS].DIMENSION_EDADES_CLIENTE(ED_CLI_EDAD_ID),
CONSTRAINT FK_DIMENSION_PROVEEDOR FOREIGN KEY(ID_PROVEEDOR)
	REFERENCES [DATASCIENTISTS].DIMENSION_PROVEEDORES(PROV_ID),
CONSTRAINT FK_DIMENSION_TIPO_HABITACION FOREIGN KEY(ID_TIPO_HABITACION)
	REFERENCES [DATASCIENTISTS].DIMENSION_TIPOS_HABITACIONES(TIP_HAB_ID),
CONSTRAINT FK_DIMENSION_HOTELES_DESTINOS FOREIGN KEY(ID_HOT_DESTINO)
	REFERENCES [DATASCIENTISTS].DIMENSION_HOTELES_DESTINOS(HOTEL_ID),
CONSTRAINT FK_DIMENSION_SUCURSAL FOREIGN KEY(ID_SUCURSAL)
	REFERENCES [DATASCIENTISTS].DIMENSION_SUCURSALES(SUC_ID)
	)
*/

CREATE TABLE [DATASCIENTISTS].[HECHOS_PASAJES]
(
	[ID_MES_ANIO] nvarchar(6),
	[ID_EDAD_CLIENTE] decimal(18,0),
	[ID_PROVEEDOR] decimal(18,0),
	[ID_TIPO_PASAJE] decimal(18,0),
	[ID_CIU_DESTINO] decimal(18,0),
	[ID_AVION] decimal(18,0),
	[ID_RUTA] decimal(18,0),
	[ID_SUCURSAL] decimal(18,0),
	[GANANCIA] decimal(18,2),
	[CANTIDAD_PASAJES] decimal(18,0),
	[CANTIDAD_CLIENTES] decimal(18,0),
	[COSTO_PROMEDIO] decimal(18,2),
	[PRECIO_PROMEDIA] decimal(18,2),
	[FACTURACION] decimal(18,2),
	CONSTRAINT FK_PAS_DIMENSION_MES_ANIO FOREIGN KEY(ID_MES_ANIO)
		REFERENCES [DATASCIENTISTS].DIMENSION_MES_ANIO(MA_MES_ANIO_ID),
	CONSTRAINT FK_PAS_DIMENSION_EDAD_CLIENTE FOREIGN KEY(ID_EDAD_CLIENTE)
		REFERENCES [DATASCIENTISTS].DIMENSION_EDADES_CLIENTE(ED_CLI_EDAD_ID),
	CONSTRAINT FK_PAS_DIMENSION_PROVEEDOR FOREIGN KEY(ID_PROVEEDOR)
		REFERENCES [DATASCIENTISTS].DIMENSION_PROVEEDORES(PROV_ID),
	CONSTRAINT FK_PAS_DIMENSION_TIPO_PASAJE FOREIGN KEY(ID_TIPO_PASAJE)
		REFERENCES [DATASCIENTISTS].DIMENSION_TIPOS_PASAJE(TIP_PAS_ID),
	CONSTRAINT FK_PAS_DIMENSION_CIUDADES_DESTINO FOREIGN KEY(ID_CIU_DESTINO)
		REFERENCES [DATASCIENTISTS].DIMENSION_CIUDADES_DESTINO(CIU_DES_ID),	
	CONSTRAINT FK_PAS_DIMENSION_AVIONES FOREIGN KEY(ID_AVION)
		REFERENCES [DATASCIENTISTS].DIMENSION_AVIONES(AVI_ID),
	CONSTRAINT FK_PAS_DIMENSION_RUTAS FOREIGN KEY(ID_RUTA)
		REFERENCES [DATASCIENTISTS].DIMENSION_RUTAS(RUT_ID),
	CONSTRAINT FK_DIMENSION_SUCURSAL FOREIGN KEY(ID_SUCURSAL)
		REFERENCES [DATASCIENTISTS].DIMENSION_SUCURSALES(SUC_ID)
);

PRINT CAST(SYSDATETIME() AS VARCHAR(25))+' Modelo de datos dimensional creado correctamente';
GO

--FUNCIONES
CREATE FUNCTION DATASCIENTISTS.ObtenerIdTipoPasaje
(@tipoButaca nvarchar(50))
RETURNS DECIMAL(18,0)
BEGIN
	RETURN ISNULL((SELECT TIP_PAS_ID FROM DATASCIENTISTS.DIMENSION_TIPOS_PASAJE
		WHERE TIP_PAS_TIPO_BUTACA=@tipoButaca),0);
END
GO

CREATE FUNCTION DATASCIENTISTS.ObtenerIdRuta
(@descRuta nvarchar(300))
RETURNS DECIMAL(18,0)
BEGIN
	RETURN ISNULL((SELECT RUT_ID FROM DATASCIENTISTS.DIMENSION_RUTAS
		WHERE RUT_DESCRIPCION=@descRuta),0);
END
GO

CREATE FUNCTION DATASCIENTISTS.ObtenerIdDimAvion
(@patente nvarchar(50), @modelo nvarchar(50))
RETURNS DECIMAL(18,0)
BEGIN
	RETURN ISNULL((SELECT AVI_ID FROM DATASCIENTISTS.DIMENSION_AVIONES
		WHERE AVI_PATENTE=@patente AND AVI_MODELO=@modelo),0);
END
GO

--STORED PROCEDURES

--DIMENSION_MES_ANIO
CREATE PROCEDURE [DATASCIENTISTS].MigracionMesAnio
AS
BEGIN
	INSERT [DATASCIENTISTS].DIMENSION_MES_ANIO (MA_MES_ANIO_ID, MA_GANANCIA, MA_FACTURACION, MA_MAYOR_DESTINO, MA_MAYOR_RUTA,
		MA_MAYOR_CLIENTE, MA_MAYOR_SUCURSAL, MA_MAYOR_PROVEEDOR)
	SELECT CAST(YEAR(factEx.FACT_FECHA) AS VARCHAR(4))+'0'+CAST(MONTH(factEx.FACT_FECHA) AS VARCHAR(2)) MA_MES_ANIO_ID, 
	--SUMO GANANCIA POR PASAJES MÁS ESTADÍAS.
	ISNULL((SELECT SUM(PASAJE_PRECIO-PASAJE_COSTO) FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_PAS_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA)
	GROUP BY YEAR(FACT_FECHA), MONTH(FACT_FECHA)),0)+
	ISNULL((SELECT SUM(HABIT_PRECIO-HABIT_COSTO) FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_EST_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].ESTADIA ON ITEM_EST_COD_ESTADIA=ESTADIA_CODIGO
	INNER JOIN [DATASCIENTISTS].HABITACION ON ESTADIA_HABITACION=HABITACION_ID
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA)
	GROUP BY YEAR(FACT_FECHA), MONTH(FACT_FECHA)),0)  MA_GANANCIA,
	--SUMO FACTURACION POR PASAJES MÁS ESTADÍAS.
	ISNULL((SELECT SUM(PASAJE_PRECIO) FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_PAS_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA)
	GROUP BY YEAR(FACT_FECHA), MONTH(FACT_FECHA)),0)+
	ISNULL((SELECT SUM(HABIT_COSTO) FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_EST_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].ESTADIA ON ITEM_EST_COD_ESTADIA=ESTADIA_CODIGO
	INNER JOIN [DATASCIENTISTS].HABITACION ON ESTADIA_HABITACION=HABITACION_ID
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA)
	GROUP BY YEAR(FACT_FECHA), MONTH(FACT_FECHA)),0) MA_FACTURACION,
	--CASE PREGUNTANDO LA MAYOR CANTIDAD DE FACTURAS. SI FUERON POR PASAJES DEVOLVEMOS EL DESTINO
	--SI NO LA DIRECCIÓN DEL HOTEL
	CASE WHEN (SELECT TOP 1 COUNT(*) 
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_PAS_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN [DATASCIENTISTS].VUELO ON PASAJE_VUELO=VUELO_CODIGO
	INNER JOIN [DATASCIENTISTS].CIUDADES ON CIUDAD_ID=VUELO_RUTA_AEREA_DEST
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA) 
	GROUP BY CIUDAD_NOMBRE
	ORDER BY COUNT(DISTINCT ITEM_PAS_COD_PASAJE) DESC)>(SELECT TOP 1 COUNT(*)
	FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_EST_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].ESTADIA ON ITEM_EST_COD_ESTADIA=ESTADIA_CODIGO
	INNER JOIN [DATASCIENTISTS].HABITACION ON ESTADIA_HABITACION=HABITACION_ID
	INNER JOIN [DATASCIENTISTS].HOTEL ON HOTEL_ID=HABIT_HOTEL_ID
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA)
	GROUP BY HOTEL_CALLE, HOTEL_NUMERO_CALLE
	ORDER BY COUNT(DISTINCT ITEM_EST_COD_ESTADIA) DESC) THEN ((SELECT TOP 1 LEFT(CIUDAD_NOMBRE, 1)+LOWER(SUBSTRING(CIUDAD_NOMBRE,2, 254)) CIUDAD_NOMBRE 
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_PAS_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN [DATASCIENTISTS].VUELO ON PASAJE_VUELO=VUELO_CODIGO
	INNER JOIN [DATASCIENTISTS].CIUDADES ON CIUDAD_ID=VUELO_RUTA_AEREA_DEST
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA) 
	GROUP BY CIUDAD_NOMBRE
	ORDER BY COUNT(DISTINCT ITEM_PAS_COD_PASAJE) DESC))
	ELSE (SELECT TOP 1 HOTEL_CALLE+' '+CAST(HOTEL_NUMERO_CALLE AS VARCHAR(10)) DESTINO
	FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_EST_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].ESTADIA ON ITEM_EST_COD_ESTADIA=ESTADIA_CODIGO
	INNER JOIN [DATASCIENTISTS].HABITACION ON ESTADIA_HABITACION=HABITACION_ID
	INNER JOIN [DATASCIENTISTS].HOTEL ON HOTEL_ID=HABIT_HOTEL_ID
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA)
	GROUP BY HOTEL_CALLE, HOTEL_NUMERO_CALLE
	ORDER BY COUNT(DISTINCT ITEM_EST_COD_ESTADIA) DESC) END MA_MAYOR_DESTINO,
	--CALCULO LA MAYOR RUTA PARA EL AÑO Y MES
	(SELECT TOP 1 'Desde '+LEFT(ciuOr.CIUDAD_NOMBRE, 1)+LOWER(SUBSTRING(ciuOr.CIUDAD_NOMBRE,2, 254))+' a '
	+LEFT(ciuDe.CIUDAD_NOMBRE, 1)+LOWER(SUBSTRING(ciuDe.CIUDAD_NOMBRE,2, 254))
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_PAS_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN [DATASCIENTISTS].VUELO ON PASAJE_VUELO=VUELO_CODIGO
	INNER JOIN [DATASCIENTISTS].CIUDADES ciuOr ON ciuOr.CIUDAD_ID=VUELO_RUTA_AEREA_ORIG
	INNER JOIN [DATASCIENTISTS].CIUDADES ciuDe ON ciuDe.CIUDAD_ID=VUELO_RUTA_AEREA_DEST
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA) 
	GROUP BY VUELO_RUTA_AEREA_ORIG, VUELO_RUTA_AEREA_DEST,ciuOr.CIUDAD_NOMBRE,ciuDe.CIUDAD_NOMBRE
	ORDER BY COUNT(DISTINCT ITEM_PAS_COD_PASAJE) DESC)
	MA_MAYOR_RUTA,
	--CASE PREGUNTANDO LA MAYOR GANANCIA. SI ES POR UNA ESTADIA, DEVOLVER ESE CLIENTE
	--SI NO, DEVOLVER EL CLIENTE DEL PASAJE
	CASE WHEN (SELECT TOP 1 PASAJE_PRECIO-PASAJE_COSTO FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_PAS_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA) 
	GROUP BY FACT_CLIENTE, PASAJE_PRECIO, PASAJE_COSTO
	ORDER BY PASAJE_PRECIO-PASAJE_COSTO DESC)>(SELECT TOP 1 HABIT_PRECIO-HABIT_COSTO FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_EST_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].ESTADIA ON ITEM_EST_COD_ESTADIA=ESTADIA_CODIGO
	INNER JOIN [DATASCIENTISTS].HABITACION ON ESTADIA_HABITACION=HABITACION_ID
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA) 
	GROUP BY FACT_CLIENTE, HABIT_PRECIO, HABIT_COSTO
	ORDER BY HABIT_PRECIO-HABIT_COSTO DESC) THEN (SELECT TOP 1 LEFT(CLIENTE_NOMBRE, 1)+LOWER(SUBSTRING(CLIENTE_NOMBRE,2, 254))+' '+CLIENTE_APELLIDO  
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_PAS_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN DATASCIENTISTS.CLIENTE ON CLIENTE_ID=FACT_CLIENTE
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA) 
	GROUP BY CLIENTE_NOMBRE, CLIENTE_APELLIDO, PASAJE_PRECIO, PASAJE_COSTO
	ORDER BY PASAJE_PRECIO-PASAJE_COSTO DESC)
	ELSE (SELECT TOP 1 LEFT(CLIENTE_NOMBRE, 1)+LOWER(SUBSTRING(CLIENTE_NOMBRE,2, 254))+' '+CLIENTE_APELLIDO FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_EST_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].ESTADIA ON ITEM_EST_COD_ESTADIA=ESTADIA_CODIGO
	INNER JOIN [DATASCIENTISTS].HABITACION ON ESTADIA_HABITACION=HABITACION_ID
	INNER JOIN DATASCIENTISTS.CLIENTE ON CLIENTE_ID=FACT_CLIENTE
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA) 
	GROUP BY CLIENTE_NOMBRE, CLIENTE_APELLIDO, HABIT_PRECIO, HABIT_COSTO
	ORDER BY HABIT_PRECIO-HABIT_COSTO DESC) END MA_MAYOR_CLIENTE,
	--CASE PREGUNTANDO LA MAYOR GANANCIA POR SUCURSAL.
	CASE WHEN (SELECT TOP 1 SUM(PASAJE_PRECIO-PASAJE_COSTO) FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_PAS_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN DATASCIENTISTS.SUCURSAL ON SUCURSAL_ID=FACT_SUCURSAL
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA) 
	GROUP BY SUCURSAL_ID
	ORDER BY SUM(PASAJE_PRECIO-PASAJE_COSTO) DESC)>(SELECT TOP 1 SUM(HABIT_PRECIO-HABIT_COSTO) FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_EST_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].ESTADIA ON ITEM_EST_COD_ESTADIA=ESTADIA_CODIGO
	INNER JOIN [DATASCIENTISTS].HABITACION ON ESTADIA_HABITACION=HABITACION_ID
	INNER JOIN DATASCIENTISTS.SUCURSAL ON SUCURSAL_ID=FACT_SUCURSAL
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA) 
	GROUP BY SUCURSAL_ID
	ORDER BY SUM(HABIT_PRECIO-HABIT_COSTO) DESC) THEN (SELECT TOP 1 SUCURSAL_DIR FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_PAS_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN DATASCIENTISTS.SUCURSAL ON SUCURSAL_ID=FACT_SUCURSAL
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA) 
	GROUP BY SUCURSAL_DIR
	ORDER BY SUM(PASAJE_PRECIO-PASAJE_COSTO) DESC)
	ELSE (SELECT TOP 1 SUCURSAL_DIR FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_EST_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].ESTADIA ON ITEM_EST_COD_ESTADIA=ESTADIA_CODIGO
	INNER JOIN [DATASCIENTISTS].HABITACION ON ESTADIA_HABITACION=HABITACION_ID
	INNER JOIN DATASCIENTISTS.SUCURSAL ON SUCURSAL_ID=FACT_SUCURSAL
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA) 
	GROUP BY SUCURSAL_DIR
	ORDER BY SUM(HABIT_PRECIO-HABIT_COSTO) DESC) END MA_MAYOR_SUCURSAL,
	--CASE PREGUNTANDO POR LA MAYOR GANANCIA POR EMPRESA. SI ES AEROCOMECIAL DEVOLVEMOS ESA
	--SI NO, LA HOTELERA
	CASE WHEN (SELECT TOP 1 SUM(PASAJE_PRECIO-PASAJE_COSTO) FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_PAS_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN DATASCIENTISTS.COMPRA ON COMPRA_NUMERO=PASAJE_COMPRA
	INNER JOIN DATASCIENTISTS.EMPRESA ON COMPRA_EMPRESA=EMPRESA_ID
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA) 
	GROUP BY EMPRESA_ID
	ORDER BY SUM(PASAJE_PRECIO-PASAJE_COSTO) DESC)>(SELECT TOP 1 SUM(HABIT_PRECIO-HABIT_COSTO) FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_EST_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].ESTADIA ON ITEM_EST_COD_ESTADIA=ESTADIA_CODIGO
	INNER JOIN [DATASCIENTISTS].HABITACION ON ESTADIA_HABITACION=HABITACION_ID
	INNER JOIN DATASCIENTISTS.COMPRA ON COMPRA_NUMERO=ESTADIA_COMPRA
	INNER JOIN DATASCIENTISTS.EMPRESA ON COMPRA_EMPRESA=EMPRESA_ID
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA) 
	GROUP BY EMPRESA_ID
	ORDER BY SUM(HABIT_PRECIO-HABIT_COSTO) DESC) THEN (SELECT TOP 1 EMPRESA_RAZON_SOCIAL FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_PAS_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN DATASCIENTISTS.COMPRA ON COMPRA_NUMERO=PASAJE_COMPRA
	INNER JOIN DATASCIENTISTS.EMPRESA ON COMPRA_EMPRESA=EMPRESA_ID
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA) 
	GROUP BY EMPRESA_RAZON_SOCIAL
	ORDER BY SUM(PASAJE_PRECIO-PASAJE_COSTO) DESC)
	ELSE (SELECT TOP 1 EMPRESA_RAZON_SOCIAL FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_EST_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].ESTADIA ON ITEM_EST_COD_ESTADIA=ESTADIA_CODIGO
	INNER JOIN [DATASCIENTISTS].HABITACION ON ESTADIA_HABITACION=HABITACION_ID
	INNER JOIN DATASCIENTISTS.COMPRA ON COMPRA_NUMERO=ESTADIA_COMPRA
	INNER JOIN DATASCIENTISTS.EMPRESA ON COMPRA_EMPRESA=EMPRESA_ID
	WHERE YEAR(factIn.FACT_FECHA)=YEAR(factEx.FACT_FECHA) AND MONTH(factIn.FACT_FECHA)=MONTH(factEx.FACT_FECHA) 
	GROUP BY EMPRESA_RAZON_SOCIAL
	ORDER BY SUM(HABIT_PRECIO-HABIT_COSTO) DESC) END MA_MAYOR_PROVEEDOR
	FROM [DATASCIENTISTS].FACTURA factEx
	GROUP BY YEAR(factEx.FACT_FECHA), MONTH(factEx.FACT_FECHA)
	ORDER BY YEAR(factEx.FACT_FECHA), MONTH(factEx.FACT_FECHA);
	PRINT CAST(SYSDATETIME() AS VARCHAR(25))+' Mes anio insertados correctamente';
END
GO

--DIMENSION_PROVEEDORES
CREATE PROCEDURE [DATASCIENTISTS].MigracionProveedores
AS
BEGIN
	INSERT [DATASCIENTISTS].DIMENSION_PROVEEDORES (PROV_ID, PROV_RAZON_SOCIAL, PROV_CANT_PASAJES_VENDIDA, PROV_CANT_ESTADIAS_VENDIDA, PROV_MAYOR_TIPO_BUTACA
		, PROV_CANT_ESTRELLAS_PROM, PROV_MAYOR_DESTINO, PROV_GANANCIA_TOTAL)
	SELECT EMPRESA_ID PROV_ID, EMPRESA_RAZON_SOCIAL PROV_RAZON_SOCIAL,
	--CUENTO LOS PASAJES DE LA EMPRESA
	ISNULL((SELECT COUNT(DISTINCT ITEM_PASAJE_ID) FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN DATASCIENTISTS.COMPRA ON COMPRA_NUMERO=PASAJE_COMPRA
	INNER JOIN DATASCIENTISTS.EMPRESA empIn ON COMPRA_EMPRESA=empIn.EMPRESA_ID
	WHERE empIn.EMPRESA_ID=empEx.EMPRESA_ID
	GROUP BY empIn.EMPRESA_ID),0) PROV_CANT_PASAJES_VENDIDA,
	--CUENTO LAS ESTADIAS DE LA EMPRESA
	ISNULL((SELECT COUNT(DISTINCT ITEM_ESTADIA_ID) FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].ESTADIA ON ITEM_EST_COD_ESTADIA=ESTADIA_CODIGO
	INNER JOIN DATASCIENTISTS.COMPRA ON COMPRA_NUMERO=ESTADIA_COMPRA
	INNER JOIN DATASCIENTISTS.EMPRESA empIn ON COMPRA_EMPRESA=empIn.EMPRESA_ID
	WHERE empIn.EMPRESA_ID=empEx.EMPRESA_ID
	GROUP BY empIn.EMPRESA_ID),0) PROV_CANT_ESTADIAS_VENDIDA,
	--VEO CUÁL ES EL MAYOR TIPO DE BUTACA
	ISNULL((SELECT TOP 1 BUTACA_TIPO FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN DATASCIENTISTS.COMPRA ON COMPRA_NUMERO=PASAJE_COMPRA
	INNER JOIN DATASCIENTISTS.EMPRESA empIn ON COMPRA_EMPRESA=empIn.EMPRESA_ID
	INNER JOIN DATASCIENTISTS.BUTACA ON BUTACA_ID=PASAJE_BUTACA
	WHERE empIn.EMPRESA_ID=empEx.EMPRESA_ID
	GROUP BY BUTACA_TIPO
	ORDER BY COUNT(DISTINCT ITEM_PASAJE_ID) DESC),'') PROV_MAYOR_TIPO_BUTACA,
	--VEO CUÁL ES EL PROMEDIO DE ESTRELLAS DE ESTADIAS
	ISNULL((SELECT AVG(HOTEL_CANTIDAD_ESTRELLAS) FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].ESTADIA ON ITEM_EST_COD_ESTADIA=ESTADIA_CODIGO
	INNER JOIN DATASCIENTISTS.COMPRA ON COMPRA_NUMERO=ESTADIA_COMPRA
	INNER JOIN DATASCIENTISTS.EMPRESA empIn ON COMPRA_EMPRESA=empIn.EMPRESA_ID
	INNER JOIN DATASCIENTISTS.HABITACION ON HABITACION_ID=ESTADIA_HABITACION
	INNER JOIN DATASCIENTISTS.HOTEL ON HABIT_HOTEL_ID=HOTEL_ID
	WHERE empIn.EMPRESA_ID=empEx.EMPRESA_ID
	GROUP BY empIn.EMPRESA_ID),0) PROV_CANT_ESTRELLAS_PROM,
	--CASE PREGUNTANDO LA MAYOR CANTIDAD DE FACTURAS. SI FUERON POR PASAJES DEVOLVEMOS EL DESTINO
	--SI NO LA DIRECCIÓN DEL HOTEL
	CASE WHEN ISNULL((SELECT TOP 1 COUNT(*) 
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN [DATASCIENTISTS].VUELO ON PASAJE_VUELO=VUELO_CODIGO
	INNER JOIN [DATASCIENTISTS].CIUDADES ON CIUDAD_ID=VUELO_RUTA_AEREA_DEST
	INNER JOIN DATASCIENTISTS.COMPRA ON COMPRA_NUMERO=PASAJE_COMPRA
	INNER JOIN DATASCIENTISTS.EMPRESA empIn ON COMPRA_EMPRESA=empIn.EMPRESA_ID
	WHERE empIn.EMPRESA_ID=empEx.EMPRESA_ID
	GROUP BY CIUDAD_NOMBRE
	ORDER BY COUNT(*) DESC),0)>ISNULL((SELECT TOP 1 COUNT(*)
	FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].ESTADIA ON ITEM_EST_COD_ESTADIA=ESTADIA_CODIGO
	INNER JOIN [DATASCIENTISTS].HABITACION ON ESTADIA_HABITACION=HABITACION_ID
	INNER JOIN DATASCIENTISTS.COMPRA ON COMPRA_NUMERO=ESTADIA_COMPRA
	INNER JOIN DATASCIENTISTS.EMPRESA empIn ON COMPRA_EMPRESA=empIn.EMPRESA_ID
	INNER JOIN [DATASCIENTISTS].HOTEL ON HOTEL_ID=HABIT_HOTEL_ID
	WHERE empIn.EMPRESA_ID=empEx.EMPRESA_ID
	GROUP BY HOTEL_CALLE, HOTEL_NUMERO_CALLE
	ORDER BY COUNT(*) DESC),0) THEN ((SELECT TOP 1 LEFT(CIUDAD_NOMBRE, 1)+LOWER(SUBSTRING(CIUDAD_NOMBRE,2, 254)) CIUDAD_NOMBRE 
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN [DATASCIENTISTS].VUELO ON PASAJE_VUELO=VUELO_CODIGO
	INNER JOIN [DATASCIENTISTS].CIUDADES ON CIUDAD_ID=VUELO_RUTA_AEREA_DEST
	INNER JOIN DATASCIENTISTS.COMPRA ON COMPRA_NUMERO=PASAJE_COMPRA
	INNER JOIN DATASCIENTISTS.EMPRESA empIn ON COMPRA_EMPRESA=empIn.EMPRESA_ID
	WHERE empIn.EMPRESA_ID=empEx.EMPRESA_ID
	GROUP BY CIUDAD_NOMBRE
	ORDER BY COUNT(*) DESC))
	ELSE (SELECT TOP 1 HOTEL_CALLE+' '+CAST(HOTEL_NUMERO_CALLE AS VARCHAR(10)) DESTINO
	FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].ESTADIA ON ITEM_EST_COD_ESTADIA=ESTADIA_CODIGO
	INNER JOIN [DATASCIENTISTS].HABITACION ON ESTADIA_HABITACION=HABITACION_ID
	INNER JOIN [DATASCIENTISTS].HOTEL ON HOTEL_ID=HABIT_HOTEL_ID
	INNER JOIN DATASCIENTISTS.COMPRA ON COMPRA_NUMERO=ESTADIA_COMPRA
	INNER JOIN DATASCIENTISTS.EMPRESA empIn ON COMPRA_EMPRESA=empIn.EMPRESA_ID
	WHERE empIn.EMPRESA_ID=empEx.EMPRESA_ID
	GROUP BY HOTEL_CALLE, HOTEL_NUMERO_CALLE
	ORDER BY COUNT(*) DESC) END PROV_MAYOR_DESTINO,
	--SUMO LAS GANANCIAS POR ESTADÍAS A LAS DE PASAJES
	ISNULL((SELECT SUM(PASAJE_PRECIO-PASAJE_COSTO) FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN DATASCIENTISTS.COMPRA ON COMPRA_NUMERO=PASAJE_COMPRA
	INNER JOIN DATASCIENTISTS.EMPRESA empIn ON COMPRA_EMPRESA=empIn.EMPRESA_ID
	WHERE empIn.EMPRESA_ID=empEx.EMPRESA_ID
	GROUP BY empIn.EMPRESA_ID),0)+
	ISNULL((SELECT SUM(HABIT_PRECIO-HABIT_COSTO) FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].ESTADIA ON ITEM_EST_COD_ESTADIA=ESTADIA_CODIGO
	INNER JOIN [DATASCIENTISTS].HABITACION ON ESTADIA_HABITACION=HABITACION_ID
	INNER JOIN DATASCIENTISTS.COMPRA ON COMPRA_NUMERO=ESTADIA_COMPRA
	INNER JOIN DATASCIENTISTS.EMPRESA empIn ON COMPRA_EMPRESA=empIn.EMPRESA_ID
	WHERE empIn.EMPRESA_ID=empEx.EMPRESA_ID
	GROUP BY empIn.EMPRESA_ID),0) PROV_GANANCIA_TOTAL
	FROM DATASCIENTISTS.EMPRESA empEx;
	PRINT CAST(SYSDATETIME() AS VARCHAR(25))+' Proveedores insertados correctamente';
END
GO

--DIMENSION_TIPOS_PASAJE
CREATE PROCEDURE [DATASCIENTISTS].MigracionTiposPasaje
AS
BEGIN
	INSERT [DATASCIENTISTS].DIMENSION_TIPOS_PASAJE (TIP_PAS_TIPO_BUTACA, TIP_PAS_CANT_PASAJES, TIP_PAS_EDAD_PROM, TIP_PAS_MAYOR_DESTINO, 
		TIP_PAS_MAYOR_PROVEEDOR, TIP_PAS_GANANCIA_TOTAL)
	SELECT DISTINCT butEx.BUTACA_TIPO TIP_PAS_TIPO_BUTACA,
	--CALCULO CANTIDAD DE PASAJES
	(SELECT COUNT(DISTINCT ITEM_PASAJE_ID) 
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN DATASCIENTISTS.BUTACA butIn ON butIn.BUTACA_ID=PASAJE_BUTACA
	WHERE butIn.BUTACA_TIPO=butEx.BUTACA_TIPO
	GROUP BY butIn.BUTACA_TIPO) TIP_PAS_CANT_PASAJES,
	--CALCULO EDAD PROMEDIO
	(SELECT AVG(DATEDIFF(YEAR, CLIENTE_FECHA_NAC, Getdate())) 
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN [DATASCIENTISTS].FACTURA ON ITEM_PAS_FACT_NUMERO=FACT_NUMERO
	INNER JOIN DATASCIENTISTS.CLIENTE ON CLIENTE_ID=FACT_CLIENTE
	INNER JOIN DATASCIENTISTS.BUTACA butIn ON butIn.BUTACA_ID=PASAJE_BUTACA
	WHERE butIn.BUTACA_TIPO=butEx.BUTACA_TIPO
	GROUP BY butIn.BUTACA_TIPO) TIP_PAS_EDAD_PROM,
	--CALCULO MAYOR DESTINO DEL TIPO DE PASAJE
	(SELECT TOP 1 LEFT(CIUDAD_NOMBRE, 1)+LOWER(SUBSTRING(CIUDAD_NOMBRE,2, 254)) CIUDAD_NOMBRE 
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN [DATASCIENTISTS].VUELO ON PASAJE_VUELO=VUELO_CODIGO
	INNER JOIN [DATASCIENTISTS].CIUDADES ON CIUDAD_ID=VUELO_RUTA_AEREA_DEST
	INNER JOIN DATASCIENTISTS.BUTACA butIn ON butIn.BUTACA_ID=PASAJE_BUTACA
	WHERE butIn.BUTACA_TIPO=butEx.BUTACA_TIPO
	GROUP BY CIUDAD_NOMBRE
	ORDER BY COUNT(DISTINCT ITEM_PASAJE_ID) DESC) TIP_PAS_MAYOR_DESTINO,
	--CALCULO MAYOR PROOVEDOR PARA EL TIPO DE PASAJE
	(SELECT TOP 1 empIn.EMPRESA_RAZON_SOCIAL FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN DATASCIENTISTS.COMPRA ON COMPRA_NUMERO=PASAJE_COMPRA
	INNER JOIN DATASCIENTISTS.EMPRESA empIn ON COMPRA_EMPRESA=empIn.EMPRESA_ID
	INNER JOIN DATASCIENTISTS.BUTACA butIn ON butIn.BUTACA_ID=PASAJE_BUTACA
	WHERE butIn.BUTACA_TIPO=butEx.BUTACA_TIPO
	GROUP BY EMPRESA_RAZON_SOCIAL
	ORDER BY COUNT(DISTINCT ITEM_PASAJE_ID) DESC) TIP_PAS_MAYOR_PROVEEDOR,
	--CALCULO LA GANANCIA TOTAL DE ESE TIPO DE PASAJE
	(SELECT SUM(PASAJE_PRECIO-PASAJE_COSTO) FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN DATASCIENTISTS.BUTACA butIn ON butIn.BUTACA_ID=PASAJE_BUTACA
	WHERE butIn.BUTACA_TIPO=butEx.BUTACA_TIPO
	GROUP BY butIn.BUTACA_TIPO) TIP_PAS_GANANCIA_TOTAL
	FROM [DATASCIENTISTS].BUTACA butEx;
	PRINT CAST(SYSDATETIME() AS VARCHAR(25))+' Tipos Pasaje insertados correctamente';
END
GO

--DIMENSION_RUTAS
CREATE PROCEDURE [DATASCIENTISTS].MigracionRutas
AS
BEGIN
	INSERT [DATASCIENTISTS].DIMENSION_RUTAS (RUT_DESCRIPCION, RUT_CANT_VIAJES, RUT_MAYOR_TIPO_BUTACA, RUT_MAYOR_PROVEEDOR,
		RUT_COSTO_PROMEDIO, RUT_PRECIO_PROMEDIO)
	SELECT 'Desde '+LEFT(ciuOr.CIUDAD_NOMBRE, 1)+LOWER(SUBSTRING(ciuOr.CIUDAD_NOMBRE,2, 254))+' a '
	+LEFT(ciuDe.CIUDAD_NOMBRE, 1)+LOWER(SUBSTRING(ciuDe.CIUDAD_NOMBRE,2, 254)) RUT_DESCRIPCION,
	--CALCULO CANTIDAD DE VIAJES PARA ESA RUTA
	(SELECT COUNT(*)
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN [DATASCIENTISTS].VUELO ON PASAJE_VUELO=VUELO_CODIGO
	WHERE VUELO_RUTA_AEREA_ORIG=RUTA_AEREA_CIU_ORIG 
		AND VUELO_RUTA_AEREA_DEST=RUTA_AEREA_CIU_DEST) RUT_CANT_VIAJES,
	--CALCULO EL MAYOR TIPO DE BUTACA COMPRADO PARA ESA RUTA
	(SELECT TOP 1 BUTACA_TIPO
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN [DATASCIENTISTS].VUELO ON PASAJE_VUELO=VUELO_CODIGO
	INNER JOIN DATASCIENTISTS.BUTACA butIn ON butIn.BUTACA_ID=PASAJE_BUTACA
	WHERE VUELO_RUTA_AEREA_ORIG=RUTA_AEREA_CIU_ORIG AND VUELO_RUTA_AEREA_DEST=RUTA_AEREA_CIU_DEST
	GROUP BY BUTACA_TIPO
	ORDER BY COUNT(DISTINCT ITEM_PASAJE_ID) DESC)
	RUT_MAYOR_TIPO_BUTACA,
	--CALCULO EL MAYOR PROVEEDOR PARA ESA RUTA
	(SELECT TOP 1 EMPRESA_RAZON_SOCIAL
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN [DATASCIENTISTS].VUELO ON PASAJE_VUELO=VUELO_CODIGO
	INNER JOIN DATASCIENTISTS.COMPRA ON COMPRA_NUMERO=PASAJE_COMPRA
	INNER JOIN DATASCIENTISTS.EMPRESA empIn ON COMPRA_EMPRESA=empIn.EMPRESA_ID
	WHERE VUELO_RUTA_AEREA_ORIG=RUTA_AEREA_CIU_ORIG AND VUELO_RUTA_AEREA_DEST=RUTA_AEREA_CIU_DEST
	GROUP BY EMPRESA_RAZON_SOCIAL
	ORDER BY COUNT(*) DESC) RUT_MAYOR_PROVEEDOR,
	--CALCULO EL COSTO PROMEDIO PARA ESA RUTA
	(SELECT AVG(PASAJE_COSTO)
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN [DATASCIENTISTS].VUELO ON PASAJE_VUELO=VUELO_CODIGO
	WHERE VUELO_RUTA_AEREA_ORIG=RUTA_AEREA_CIU_ORIG AND VUELO_RUTA_AEREA_DEST=RUTA_AEREA_CIU_DEST
	GROUP BY VUELO_RUTA_AEREA_ORIG, VUELO_RUTA_AEREA_DEST) RUT_COSTO_PROMEDIO,
	--CALCULO EL PRECIO PROMEDIO PARA ESA RUTA
	(SELECT AVG(PASAJE_PRECIO)
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN [DATASCIENTISTS].VUELO ON PASAJE_VUELO=VUELO_CODIGO
	WHERE VUELO_RUTA_AEREA_ORIG=RUTA_AEREA_CIU_ORIG AND VUELO_RUTA_AEREA_DEST=RUTA_AEREA_CIU_DEST
	GROUP BY VUELO_RUTA_AEREA_ORIG, VUELO_RUTA_AEREA_DEST) RUT_PRECIO_PROMEDIO
	FROM [DATASCIENTISTS].RUTA_AEREA
	INNER JOIN [DATASCIENTISTS].CIUDADES ciuOr ON ciuOr.CIUDAD_ID=RUTA_AEREA_CIU_ORIG
	INNER JOIN [DATASCIENTISTS].CIUDADES ciuDe ON ciuDe.CIUDAD_ID=RUTA_AEREA_CIU_DEST
	ORDER BY RUTA_AEREA_CIU_ORIG, RUTA_AEREA_CIU_DEST, RUTA_AEREA_CODIGO;
	PRINT CAST(SYSDATETIME() AS VARCHAR(25))+' Rutas insertadas correctamente';
END
GO

--DIMENSION TIPOS_HABITACIONES
CREATE PROCEDURE [DATASCIENTISTS].MigracionBITiposHabitaciones
AS
BEGIN
	INSERT INTO DATASCIENTISTS.DIMENSION_TIPOS_HABITACIONES
	(TIP_HAB_ID, TIP_HAB_DESCRIPCION, TIP_HAB_CANT_CAMAS, TIP_HAB_ESTRELLAS_PROM, TIP_HAB_EDAD_PROM,
	TIP_HAB_CANT_ESTADIAS, TIP_HAB_MAYOR_PROVEEDOR, TIP_HAB_GANANCIA_TOTAL)
	(SELECT TH.TIPO_HABITACION_CODIGO, TH.TIPO_HABITACION_DESCRIPCION,
	--CANTIDAD DE CAMAS
	CASE TH.TIPO_HABITACION_CODIGO
	WHEN 1001 THEN 1
	WHEN 1005 THEN 1
	WHEN 1002 THEN 2
	WHEN 1003 THEN 3
	WHEN 1004 THEN 4
	ELSE 0 END,
	--ESTRELLAS PROM
	CAST(AVG( CAST(HO.HOTEL_CANTIDAD_ESTRELLAS as decimal(18,2))) as decimal(18,2)),
	--EDAD PROM
	CAST(AVG(CAST((YEAR(GETDATE())-YEAR(CL.CLIENTE_FECHA_NAC)) as decimal(18,2))) as decimal(18,2)),
	--CANT ESTADIAS
	COUNT(IE.ITEM_EST_COD_ESTADIA),
	--MAYOR PROVEEDOR
	(SELECT TOP 1 EMPRESA_RAZON_SOCIAL 
	FROM DATASCIENTISTS.COMPRA C
		INNER JOIN DATASCIENTISTS.ESTADIA E ON C.COMPRA_NUMERO = E.ESTADIA_COMPRA
		INNER JOIN DATASCIENTISTS.HABITACION HA ON E.ESTADIA_HABITACION = HA.HABITACION_ID
		INNER JOIN DATASCIENTISTS.HOTEL HO ON HA.HABIT_HOTEL_ID = HO.HOTEL_ID
		INNER JOIN DATASCIENTISTS.TIPO_HABITACION THin ON HA.HABIT_TIPO_COD = THin.TIPO_HABITACION_CODIGO
		INNER JOIN DATASCIENTISTS.ITEMS_ESTADIA IE ON E.ESTADIA_CODIGO = IE.ITEM_EST_COD_ESTADIA
		INNER JOIN DATASCIENTISTS.FACTURA F ON IE.ITEM_EST_FACT_NUMERO = F.FACT_NUMERO
		INNER JOIN DATASCIENTISTS.CLIENTE CL ON F.FACT_CLIENTE = CL.CLIENTE_ID
		INNER JOIN DATASCIENTISTS.EMPRESA EM ON C.COMPRA_EMPRESA = EM.EMPRESA_ID
	WHERE THin.TIPO_HABITACION_CODIGO=TH.TIPO_HABITACION_CODIGO
	GROUP BY THin.TIPO_HABITACION_CODIGO,THin.TIPO_HABITACION_DESCRIPCION,EM.EMPRESA_RAZON_SOCIAL
	ORDER BY COUNT(C.COMPRA_NUMERO) DESC),
	--GANANCIA TOTAL
	SUM(HA.HABIT_PRECIO)
	--FROM Y JOINS
	FROM DATASCIENTISTS.COMPRA C
		INNER JOIN DATASCIENTISTS.ESTADIA E ON C.COMPRA_NUMERO = E.ESTADIA_COMPRA
		INNER JOIN DATASCIENTISTS.HABITACION HA ON E.ESTADIA_HABITACION = HA.HABITACION_ID
		INNER JOIN DATASCIENTISTS.HOTEL HO ON HA.HABIT_HOTEL_ID = HO.HOTEL_ID
		INNER JOIN DATASCIENTISTS.TIPO_HABITACION TH ON HA.HABIT_TIPO_COD = TH.TIPO_HABITACION_CODIGO
		INNER JOIN DATASCIENTISTS.ITEMS_ESTADIA IE ON E.ESTADIA_CODIGO = IE.ITEM_EST_COD_ESTADIA
		INNER JOIN DATASCIENTISTS.FACTURA F ON IE.ITEM_EST_FACT_NUMERO = F.FACT_NUMERO
		INNER JOIN DATASCIENTISTS.CLIENTE CL ON F.FACT_CLIENTE = CL.CLIENTE_ID

	GROUP BY TH.TIPO_HABITACION_CODIGO,TH.TIPO_HABITACION_DESCRIPCION)
END

GO

--DIMENSION HOTELES DESTINOS
CREATE PROCEDURE [DATASCIENTISTS].MigracionBIHotelesDestinos
AS
BEGIN
	INSERT INTO DATASCIENTISTS.DIMENSION_HOTELES_DESTINOS
	(HOTEL_ID, HOT_DIRECCION, HOT_TOTAL_CAMAS, HOT_CANT_VIAJES, HOT_EDAD_PROM, HOT_GANANCIA_TOTAL,
	 HOT_DIAS_PROM, HOT_CANT_ESTRELLAS)
		(SELECT
		--HOTEL ID
		HO.HOTEL_ID,
		--DIRECCION
		HO.HOTEL_CALLE,
		--TOTAL CAMAS (DEL HOTEL)
		SUM(CASE HA.HABIT_TIPO_COD
			WHEN 1001 THEN 1
			WHEN 1005 THEN 1
			WHEN 1002 THEN 2
			WHEN 1003 THEN 3
			WHEN 1004 THEN 4
			ELSE 0 END),
		--CANT VIAJES (LAS VECES QUE SE FUE A ESE HOTEL)
		COUNT(CO.COMPRA_NUMERO),
		--EDAD PROM (EDAD QUE COMPRARON ESTADIAS)
		CAST((AVG(CAST((YEAR(GETDATE()) -YEAR(CL.CLIENTE_FECHA_NAC)) AS decimal(18,2))))as decimal(18,2)),
		--GANANCIA TOTAL
		CAST((SUM(HA.HABIT_PRECIO)) as decimal (18,2)),
		--DES DIAS PROM
		CAST(AVG(CAST(ES.ESTADIA_CANTIDAD_NOCHES as decimal(18,2))) as decimal(18,2)),
		--HOTEL ESTRELLAS
		HO.HOTEL_CANTIDAD_ESTRELLAS 
		FROM DATASCIENTISTS.COMPRA CO
			INNER JOIN DATASCIENTISTS.ESTADIA ES ON CO.COMPRA_NUMERO = ES.ESTADIA_COMPRA
			INNER JOIN DATASCIENTISTS.HABITACION HA ON ES.ESTADIA_HABITACION = HA.HABITACION_ID
			INNER JOIN DATASCIENTISTS.HOTEL HO ON HA.HABIT_HOTEL_ID = HO.HOTEL_ID
			INNER JOIN DATASCIENTISTS.ITEMS_ESTADIA IE ON ES.ESTADIA_CODIGO = IE.ITEM_EST_COD_ESTADIA
			INNER JOIN DATASCIENTISTS.FACTURA F ON IE.ITEM_EST_FACT_NUMERO = F.FACT_NUMERO
			INNER JOIN DATASCIENTISTS.CLIENTE CL ON F.FACT_CLIENTE=CL.CLIENTE_ID 

		GROUP BY HO.HOTEL_ID, HO.HOTEL_CALLE,HO.HOTEL_CANTIDAD_ESTRELLAS)

END
GO

--DIMENSION AVIONES
CREATE PROCEDURE [DATASCIENTISTS].MigracionBIAviones
AS
BEGIN
	INSERT INTO DATASCIENTISTS.DIMENSION_AVIONES (AVI_PATENTE, AVI_MODELO, AVI_MAYOR_TIPO_BUTACA, AVI_MAYOR_RUTA, AVI_CANT_VUELOS)
	SELECT AVION_IDENTIFICADOR AVI_PATENTE, AVION_MODELO AVI_MODELO,
	--CALCULO EL MAYOR TIPO DE BUTACA COMPRADO PARA EL AVION
	(SELECT TOP 1 BUTACA_TIPO FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN DATASCIENTISTS.BUTACA ON BUTACA_ID=PASAJE_BUTACA
	INNER JOIN DATASCIENTISTS.AVION avIn ON BUTACA_AVION=avIn.AVION_IDENTIFICADOR
	WHERE avEx.AVION_IDENTIFICADOR=avIn.AVION_IDENTIFICADOR
	GROUP BY BUTACA_TIPO
	ORDER BY COUNT(DISTINCT ITEM_PASAJE_ID) DESC) AVI_MAYOR_TIPO_BUTACA,
	--CALCULO LA RUTA QUE MÁS VECES SE HIZO CON ESE AVIÓN
	(SELECT TOP 1 'Desde '+LEFT(ciuOr.CIUDAD_NOMBRE, 1)+LOWER(SUBSTRING(ciuOr.CIUDAD_NOMBRE,2, 254))+' a '
	+LEFT(ciuDe.CIUDAD_NOMBRE, 1)+LOWER(SUBSTRING(ciuDe.CIUDAD_NOMBRE,2, 254))
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN [DATASCIENTISTS].VUELO ON PASAJE_VUELO=VUELO_CODIGO
	INNER JOIN [DATASCIENTISTS].CIUDADES ciuOr ON ciuOr.CIUDAD_ID=VUELO_RUTA_AEREA_ORIG
	INNER JOIN [DATASCIENTISTS].CIUDADES ciuDe ON ciuDe.CIUDAD_ID=VUELO_RUTA_AEREA_DEST
	INNER JOIN DATASCIENTISTS.BUTACA ON BUTACA_ID=PASAJE_BUTACA
	INNER JOIN DATASCIENTISTS.AVION avIn ON BUTACA_AVION=avIn.AVION_IDENTIFICADOR
	WHERE avEx.AVION_IDENTIFICADOR=avIn.AVION_IDENTIFICADOR
	GROUP BY VUELO_RUTA_AEREA_ORIG, VUELO_RUTA_AEREA_DEST,ciuOr.CIUDAD_NOMBRE,ciuDe.CIUDAD_NOMBRE
	ORDER BY COUNT(DISTINCT ITEM_PAS_COD_PASAJE) DESC) AVI_MAYOR_RUTA,
	--CALCULO LA CANTIDAD DE VUELOS DEL AVIÓN
	(SELECT COUNT(*)
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN DATASCIENTISTS.BUTACA ON BUTACA_ID=PASAJE_BUTACA
	INNER JOIN DATASCIENTISTS.AVION avIn ON BUTACA_AVION=avIn.AVION_IDENTIFICADOR
	WHERE avEx.AVION_IDENTIFICADOR=avIn.AVION_IDENTIFICADOR) AVI_CANT_VUELOS
	FROM DATASCIENTISTS.AVION avEx;
	PRINT CAST(SYSDATETIME() AS VARCHAR(25))+' Aviones insertados correctamente';
END
GO

--DIMENSION_CIUDADES_DESTINO
CREATE PROCEDURE [DATASCIENTISTS].MigracionBICiudadesDestino
AS
BEGIN
	INSERT INTO DATASCIENTISTS.DIMENSION_CIUDADES_DESTINO 
	(CIU_DES_ID, CIU_DES_CIUDAD, CIU_DES_CANT_VIAJES, CIU_DES_EDAD_PROM, CIU_DES_GANANCIA_TOTAL, CIU_DES_MAYOR_ORIGEN)
	SELECT
	--DES ID (DESTINO)
	VU.VUELO_RUTA_AEREA_DEST,
	--CIUDAD 
	LEFT(CI.CIUDAD_NOMBRE, 1)+LOWER(SUBSTRING(CI.CIUDAD_NOMBRE,2, 254)),
	--CANT VIAJES (LAS VECES QUE SE COMPRO)
	COUNT(DISTINCT ITEM_PAS_COD_PASAJE),
	--EDAD PROM (EDAD QUE COMPRARON ESTADIAS)
	AVG(DATEDIFF(YEAR, CL.CLIENTE_FECHA_NAC, Getdate())),
	--GANANCIA TOTAL
	SUM(PA.PASAJE_PRECIO),
	--ORIGEN CON MAYOR CANTIDAD DE VIAJES HACIA ESE DESTINO
	LEFT((	SELECT TOP 1 CI2.CIUDAD_NOMBRE
		FROM DATASCIENTISTS.VUELO VU2 
		INNER JOIN DATASCIENTISTS.CIUDADES CI2 ON VU2.VUELO_RUTA_AEREA_ORIG = CI2.CIUDAD_ID
		WHERE VU.VUELO_RUTA_AEREA_DEST = VU2.VUELO_RUTA_AEREA_DEST	
		GROUP BY VU2.VUELO_RUTA_AEREA_DEST, CI2.CIUDAD_NOMBRE
		ORDER BY COUNT(vu2.VUELO_RUTA_AEREA_ORIG) desc

		), 1)+LOWER(SUBSTRING((	SELECT TOP 1 CI2.CIUDAD_NOMBRE
		FROM DATASCIENTISTS.VUELO VU2 
		INNER JOIN DATASCIENTISTS.CIUDADES CI2 ON VU2.VUELO_RUTA_AEREA_ORIG = CI2.CIUDAD_ID
		WHERE VU.VUELO_RUTA_AEREA_DEST = VU2.VUELO_RUTA_AEREA_DEST	
		GROUP BY VU2.VUELO_RUTA_AEREA_DEST, CI2.CIUDAD_NOMBRE
		ORDER BY COUNT(vu2.VUELO_RUTA_AEREA_ORIG) desc

		),2, 254))
	FROM DATASCIENTISTS.COMPRA CO
	INNER JOIN DATASCIENTISTS.PASAJE PA ON CO.COMPRA_NUMERO = PA.PASAJE_COMPRA
	INNER JOIN DATASCIENTISTS.VUELO VU ON PA.PASAJE_VUELO = VU.VUELO_CODIGO
	INNER JOIN DATASCIENTISTS.CIUDADES CI ON VUELO_RUTA_AEREA_DEST = CIUDAD_ID
	INNER JOIN DATASCIENTISTS.ITEMS_PASAJE IP ON PA.PASAJE_CODIGO = IP.ITEM_PAS_COD_PASAJE
	INNER JOIN DATASCIENTISTS.FACTURA F ON IP.ITEM_PAS_FACT_NUMERO = F.FACT_NUMERO
	INNER JOIN DATASCIENTISTS.CLIENTE CL ON F.FACT_CLIENTE = CL.CLIENTE_ID
	GROUP BY VU.VUELO_RUTA_AEREA_DEST, CI.CIUDAD_NOMBRE
	ORDER BY VU.VUELO_RUTA_AEREA_DEST;
	PRINT CAST(SYSDATETIME() AS VARCHAR(25))+' Ciudades destino insertadas correctamente';
END
GO

--DIMENSION_EDADES_CLIENTE
CREATE PROCEDURE [DATASCIENTISTS].MigracionEdadesCliente
AS
BEGIN
	INSERT INTO DATASCIENTISTS.DIMENSION_EDADES_CLIENTE
	(ED_CLI_EDAD_ID, ED_CLI_CANT_PASAJES, ED_CLI_CANT_ESTADIAS, ED_CLI_GASTO_TOTAL)
	SELECT /*EDAD*/ DATEDIFF(YEAR, cliEx.CLIENTE_FECHA_NAC, Getdate()),
	--CANTIDAD DE PASAJES COMPRADOS POR CLIENTES CON ESA EDAD
	(SELECT COUNT(DISTINCT ITEM_PAS_COD_PASAJE)
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_PAS_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN DATASCIENTISTS.CLIENTE cliIn ON cliIn.CLIENTE_ID=FACT_CLIENTE
	WHERE DATEDIFF(YEAR, cliIn.CLIENTE_FECHA_NAC, Getdate())=DATEDIFF(YEAR, cliEx.CLIENTE_FECHA_NAC, Getdate())
	GROUP BY DATEDIFF(YEAR, cliIn.CLIENTE_FECHA_NAC, Getdate())) CLI_CANT_PASAJES,
	--CANTIDAD DE ESTADÍAS COMPRADAS POR CLIENTES CON ESA EDAD
	(SELECT COUNT(DISTINCT ITEM_EST_COD_ESTADIA)
	FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_EST_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN DATASCIENTISTS.CLIENTE cliIn ON cliIn.CLIENTE_ID=FACT_CLIENTE
	WHERE DATEDIFF(YEAR, cliIn.CLIENTE_FECHA_NAC, Getdate())=DATEDIFF(YEAR, cliEx.CLIENTE_FECHA_NAC, Getdate())
	GROUP BY DATEDIFF(YEAR, cliIn.CLIENTE_FECHA_NAC, Getdate())) CLI_CANT_ESTADIAS,
	--GASTO TOTAL DE CLIENTES DE ESA EDAD
	ISNULL((SELECT SUM(PASAJE_PRECIO)
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_PAS_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN DATASCIENTISTS.CLIENTE cliIn ON cliIn.CLIENTE_ID=FACT_CLIENTE
	WHERE DATEDIFF(YEAR, cliIn.CLIENTE_FECHA_NAC, Getdate())=DATEDIFF(YEAR, cliEx.CLIENTE_FECHA_NAC, Getdate())
	GROUP BY DATEDIFF(YEAR, cliIn.CLIENTE_FECHA_NAC, Getdate())),0)+
	ISNULL((SELECT SUM(HABIT_PRECIO)
	FROM [DATASCIENTISTS].ITEMS_ESTADIA
	INNER JOIN [DATASCIENTISTS].ESTADIA ON ITEM_EST_COD_ESTADIA=ESTADIA_CODIGO
	INNER JOIN [DATASCIENTISTS].HABITACION ON ESTADIA_HABITACION=HABITACION_ID
	INNER JOIN [DATASCIENTISTS].FACTURA factIn ON ITEM_EST_FACT_NUMERO=factIn.FACT_NUMERO
	INNER JOIN DATASCIENTISTS.CLIENTE cliIn ON cliIn.CLIENTE_ID=FACT_CLIENTE
	WHERE DATEDIFF(YEAR, cliIn.CLIENTE_FECHA_NAC, Getdate())=DATEDIFF(YEAR, cliEx.CLIENTE_FECHA_NAC, Getdate())
	GROUP BY DATEDIFF(YEAR, cliIn.CLIENTE_FECHA_NAC, Getdate())),0) CLI_GASTO_TOTAL
	FROM DATASCIENTISTS.CLIENTE cliEx
	GROUP BY DATEDIFF(YEAR, cliEx.CLIENTE_FECHA_NAC, Getdate())
	ORDER BY DATEDIFF(YEAR, cliEx.CLIENTE_FECHA_NAC, Getdate());
	PRINT CAST(SYSDATETIME() AS VARCHAR(25))+' Edades cliente insertadas correctamente';
END
GO

--Carga HECHOS_PASAJES
CREATE PROCEDURE [DATASCIENTISTS].MigracionHechosPasajes
AS
BEGIN
	/*
	SELECT CAST(YEAR(FACT_FECHA) AS VARCHAR(4))+'0'+CAST(MONTH(FACT_FECHA) AS VARCHAR(2)) ID_MES_ANIO,
	DATEDIFF(YEAR, CLIENTE_FECHA_NAC, Getdate()) ID_EDAD_CLIENTE,
	EMPRESA_ID ID_PROVEEDOR,
	DATASCIENTISTS.ObtenerIdTipoPasaje(BUTACA_TIPO) ID_TIPO_PASAJE, 
	VUELO_RUTA_AEREA_DEST ID_CIU_DESTINO,
	DATASCIENTISTS.ObtenerIdDimAvion(AVION_IDENTIFICADOR,AVION_MODELO) ID_AVION, 
	DATASCIENTISTS.ObtenerIdRuta('Desde '+LEFT(ciuOr.CIUDAD_NOMBRE, 1)+LOWER(SUBSTRING(ciuOr.CIUDAD_NOMBRE,2, 254))+' a '
		+LEFT(ciuDe.CIUDAD_NOMBRE, 1)+LOWER(SUBSTRING(ciuDe.CIUDAD_NOMBRE,2, 254))) ID_RUTA,
	SUCURSAL_ID ID_SUCURSAL,
	SUM(PASAJE_PRECIO-PASAJE_COSTO) GANANCIA,
	COUNT(DISTINCT ITEM_PAS_COD_PASAJE) CANTIDAD_PASAJES,
	COUNT(DISTINCT CLIENTE_ID) CANTIDAD_CLIENTES,
	AVG(PASAJE_COSTO) COSTO_PROMEDIO,
	AVG(PASAJE_PRECIO) PRECIO_PROMEDIO,
	SUM(PASAJE_PRECIO) FACTURACION
	FROM [DATASCIENTISTS].ITEMS_PASAJE
	INNER JOIN [DATASCIENTISTS].FACTURA ON ITEM_PAS_FACT_NUMERO=FACT_NUMERO
	INNER JOIN [DATASCIENTISTS].SUCURSAL ON SUCURSAL_ID=FACT_SUCURSAL
	INNER JOIN [DATASCIENTISTS].PASAJE ON ITEM_PAS_COD_PASAJE=PASAJE_CODIGO
	INNER JOIN [DATASCIENTISTS].BUTACA ON BUTACA_ID=PASAJE_BUTACA
	INNER JOIN [DATASCIENTISTS].AVION ON BUTACA_AVION=AVION_IDENTIFICADOR
	INNER JOIN [DATASCIENTISTS].COMPRA ON PASAJE_COMPRA=COMPRA_NUMERO
	INNER JOIN [DATASCIENTISTS].EMPRESA ON COMPRA_EMPRESA=EMPRESA_ID
	INNER JOIN [DATASCIENTISTS].VUELO ON PASAJE_VUELO=VUELO_CODIGO
	INNER JOIN [DATASCIENTISTS].CIUDADES ciuOr ON ciuOr.CIUDAD_ID=VUELO_RUTA_AEREA_ORIG
	INNER JOIN [DATASCIENTISTS].CIUDADES ciuDe ON ciuDe.CIUDAD_ID=VUELO_RUTA_AEREA_DEST
	INNER JOIN DATASCIENTISTS.CLIENTE ON FACT_CLIENTE=CLIENTE_ID
	GROUP BY CAST(YEAR(FACT_FECHA) AS VARCHAR(4))+'0'+CAST(MONTH(FACT_FECHA) AS VARCHAR(2)),
	DATEDIFF(YEAR, CLIENTE_FECHA_NAC, Getdate()),
	EMPRESA_ID, 
	BUTACA_TIPO,
	VUELO_RUTA_AEREA_DEST,
	AVION_IDENTIFICADOR,AVION_MODELO,
	'Desde '+LEFT(ciuOr.CIUDAD_NOMBRE, 1)+LOWER(SUBSTRING(ciuOr.CIUDAD_NOMBRE,2, 254))+' a '
		+LEFT(ciuDe.CIUDAD_NOMBRE, 1)+LOWER(SUBSTRING(ciuDe.CIUDAD_NOMBRE,2, 254)),
	SUCURSAL_ID
	ORDER BY CAST(YEAR(FACT_FECHA) AS VARCHAR(4))+'0'+CAST(MONTH(FACT_FECHA) AS VARCHAR(2)),
	DATEDIFF(YEAR, CLIENTE_FECHA_NAC, Getdate()),
	EMPRESA_ID,
	DATASCIENTISTS.ObtenerIdTipoPasaje(BUTACA_TIPO), 
	VUELO_RUTA_AEREA_DEST,
	DATASCIENTISTS.ObtenerIdDimAvion(AVION_IDENTIFICADOR,AVION_MODELO),
	DATASCIENTISTS.ObtenerIdRuta('Desde '+LEFT(ciuOr.CIUDAD_NOMBRE, 1)+LOWER(SUBSTRING(ciuOr.CIUDAD_NOMBRE,2, 254))+' a '
		+LEFT(ciuDe.CIUDAD_NOMBRE, 1)+LOWER(SUBSTRING(ciuDe.CIUDAD_NOMBRE,2, 254))),
	SUCURSAL_ID;*/
	PRINT CAST(SYSDATETIME() AS VARCHAR(25))+' Hechos pasaje insertadas correctamente';
END
GO



--CARGA DIMENCION HECHOS RELACIONADO CON ESTADIAS

/* *** MIGRACIÓN *** */

EXEC DATASCIENTISTS.MigracionMesAnio
GO

EXEC DATASCIENTISTS.MigracionProveedores
GO

EXEC DATASCIENTISTS.MigracionTiposPasaje
GO

EXEC DATASCIENTISTS.MigracionRutas
GO

EXEC DATASCIENTISTS.MigracionBITiposHabitaciones
GO

EXEC DATASCIENTISTS.MigracionBIHotelesDestinos;
GO

EXEC DATASCIENTISTS.MigracionBICiudadesDestino;
GO

EXEC DATASCIENTISTS.MigracionBIAviones;
GO

EXEC DATASCIENTISTS.MigracionEdadesCliente;
GO

EXEC DATASCIENTISTS.MigracionHechosPasajes;
GO